# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build:       # This job runs in the build stage, which runs first.
  image: ubuntu:18.04
  stage: build
  script:
    - apt-get update
    # - apt install default-jre -y 
    # - apt install default-jdk -y 
    # - apt install maven -y
    # - apt install wget -y
    - apt install git -y
    # - wget https://www.designite-tools.com/static/download/DJC/DesigniteJava.jar
    # - mvn clean install
    # - java -jar DesigniteJava.jar -i /builds/courses/2022-winter/csci-5308/group14 -o DesigniteOutput12 > Designatejava.txt
    # - cat Designatejava.txt
    # - ls
    # - git remote set-url origin git@github.com:ppreyer/first_app.git
    # - git remote add heroku https://heroku:818f1242-336d-4db1-896d-94fff45e033f@git.heroku.com/asdc-group-14.git
    # - git push -f heroku HEAD:qa
    - apt-get install -y ruby-dev
    - gem install faraday -v 1.10.0`
    - gem install dpl-heroku
    - dpl --provider=heroku --app=asdc-group-14 --api_key=818f1242-336d-4db1-896d-94fff45e033f



# unit-test:   # This job runs in the test stage.
#   image: maven:latest

#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - mvn test
#     - mvn clean install


# deploy:      # This job runs in the deploy stage.
#   image: maven:latest

#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   script:
#     - mvn test
#     - mvn clean install
